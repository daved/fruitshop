// Code generated by goa v3.1.3, DO NOT EDIT.
//
// cart HTTP client CLI support package
//
// Command:
// $ goa gen fruitshop/design

package client

import (
	"encoding/json"
	"fmt"
	cart "fruitshop/gen/cart"
)

// BuildAddPayload builds the payload for the cart add endpoint from CLI flags.
func BuildAddPayload(cartAddBody string, cartAddUserID string) (*cart.AddPayload, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(cartAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"costPerItem\": 0.11945221888838935,\n      \"count\": 8003916626658546661,\n      \"name\": \"Officiis officiis et cumque eum est consequatur.\",\n      \"totalCost\": 0.2826886157163321\n   }'")
		}
	}
	var userID string
	{
		userID = cartAddUserID
	}
	v := &cart.AddPayload{
		Name:        body.Name,
		Count:       body.Count,
		CostPerItem: body.CostPerItem,
		TotalCost:   body.TotalCost,
	}
	v.UserID = userID

	return v, nil
}

// BuildRemovePayload builds the payload for the cart remove endpoint from CLI
// flags.
func BuildRemovePayload(cartRemoveBody string, cartRemoveUserID string) (*cart.RemovePayload, error) {
	var err error
	var body RemoveRequestBody
	{
		err = json.Unmarshal([]byte(cartRemoveBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"costPerItem\": 0.9308342602059104,\n      \"count\": 1819382036291031517,\n      \"name\": \"Est officiis ut.\",\n      \"totalCost\": 0.2421495069964654\n   }'")
		}
	}
	var userID string
	{
		userID = cartRemoveUserID
	}
	v := &cart.RemovePayload{
		Name:        body.Name,
		Count:       body.Count,
		CostPerItem: body.CostPerItem,
		TotalCost:   body.TotalCost,
	}
	v.UserID = userID

	return v, nil
}

// BuildGetPayload builds the payload for the cart get endpoint from CLI flags.
func BuildGetPayload(cartGetUserID string) (*cart.GetPayload, error) {
	var userID string
	{
		userID = cartGetUserID
	}
	v := &cart.GetPayload{}
	v.UserID = userID

	return v, nil
}
