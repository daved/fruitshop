// Code generated by goa v3.1.3, DO NOT EDIT.
//
// payment HTTP client CLI support package
//
// Command:
// $ goa gen fruitshop/design

package client

import (
	"encoding/json"
	"fmt"
	payment "fruitshop/gen/payment"
)

// BuildAddPayload builds the payload for the payment add endpoint from CLI
// flags.
func BuildAddPayload(paymentAddBody string, paymentAddID string) (*payment.AddPayload, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(paymentAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"Amount\": 0.0707223839239514,\n      \"cartId\": \"Ut nesciunt dolor rem voluptatem dolor voluptatem.\"\n   }'")
		}
	}
	var id string
	{
		id = paymentAddID
	}
	v := &payment.AddPayload{
		CartID: body.CartID,
		Amount: body.Amount,
	}
	v.ID = id

	return v, nil
}

// BuildGetPayload builds the payload for the payment get endpoint from CLI
// flags.
func BuildGetPayload(paymentGetID string, paymentGetCartID string) (*payment.GetPayload, error) {
	var id string
	{
		id = paymentGetID
	}
	var cartID string
	{
		cartID = paymentGetCartID
	}
	v := &payment.GetPayload{}
	v.ID = id
	v.CartID = cartID

	return v, nil
}
