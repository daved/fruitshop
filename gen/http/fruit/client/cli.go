// Code generated by goa v3.1.3, DO NOT EDIT.
//
// fruit HTTP client CLI support package
//
// Command:
// $ goa gen fruitshop/design

package client

import (
	"encoding/json"
	"fmt"
	fruit "fruitshop/gen/fruit"
)

// BuildGetPayload builds the payload for the fruit get endpoint from CLI flags.
func BuildGetPayload(fruitGetBody string, fruitGetName string) (*fruit.GetPayload, error) {
	var err error
	var body GetRequestBody
	{
		err = json.Unmarshal([]byte(fruitGetBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"cost\": 0.9509512832245888\n   }'")
		}
	}
	var name string
	{
		name = fruitGetName
	}
	v := &fruit.GetPayload{
		Cost: body.Cost,
	}
	v.Name = name

	return v, nil
}
