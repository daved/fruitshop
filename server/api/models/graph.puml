@startuml
class CreateCustomerInput {
+FirstName: string
+LastName: string
+LoginId: string

}
class AppliedDiscountsResponse {
+ID: uint
+CustomerId: uint
+Name: string
+Status: string

}
class CartItemResponse {
+ID: uint
+CartID: uint
+Name: string
+CostPerItem: float64
+Count: int
+ItemTotal: float64

}
class AppliedDualItemDiscount {
+: Model
+CartID: uint
+DualItemDiscountID: uint
+Savings: float64

}
class AppliedSingleItemCoupon {
+: Model
+CartID: uint
+SingleItemCouponID: uint
+Savings: float64

}
class AppliedSingleItemDiscount {
+: Model
+CartID: uint
+SingleItemDiscountID: uint
+Savings: float64

}
class Cart {
+: Model
+CustomerId: uint
+Total: float64
+Status: string
+CartItem: []CartItem
+Payment: Payment
+AppliedDualItemDiscount: []AppliedDualItemDiscount
+AppliedSingleItemDiscount: []AppliedSingleItemDiscount
+AppliedSingleItemCoupon: []AppliedSingleItemCoupon

}
class CartItem {
+ID: uint
+CartID: uint
+FruitID: uint
+Quantity: int
+ItemTotal: float64

}
class Customer {
+LoginId: string
+FirstName: string
+LastName: string
+Cart: Cart
+: Model

}
class swaggCustomerResp {
+Body: interface{}

}
class DualItemDiscount {
+: Model
+Name: string
+FruitID_1: uint
+FruitID_2: uint
+Count_1: int
+Count_2: int
+Discount: int

}
class Fruit {
+: Model
+Name: string
+Price: float64
+SingleItemDiscount: []SingleItemDiscount
+SingleItemCoupon: []SingleItemCoupon

}
class Payment {
+ID: uint
+CartId: uint
+Amount: float64
+Status: string

}
class SingleItemCoupon {
+: Model
+Name: string
+FruitID: int
+Discount: int

}
class SingleItemDiscount {
+: Model
+Name: string
+FruitID: uint
+Count: int
+Discount: int

}
Customer --> Cart
Cart --> Payment
Cart --> AppliedDualItemDiscount
Cart --> AppliedSingleItemDiscount
Cart --> AppliedSingleItemCoupon
Cart --> CartItem
Fruit --> SingleItemDiscount
Fruit --> DualItemDiscount
Fruit --> SingleItemCoupon
@enduml