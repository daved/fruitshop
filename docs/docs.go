// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/server/api/v1/cart/{login_id}": {
            "get": {
                "description": "Get details of a cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show details of a cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer identifier",
                        "name": "login_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server/api/v1/cartitem/{login_id}": {
            "get": {
                "description": "Get details of contents of the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show details of a all items in a cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer identifier",
                        "name": "login_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "This end point will record cart item details into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates/Updated item in the cart",
                "parameters": [
                    {
                        "description": "Input request",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CartItem"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Customer identifier",
                        "name": "login_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server/api/v1/customers": {
            "get": {
                "description": "Get details of all customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show details of all customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    }
                }
            },
            "post": {
                "description": "This end point will record customer details into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates Customer record",
                "parameters": [
                    {
                        "description": "Input request",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCustomerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server/api/v1/customers/{login_id}": {
            "get": {
                "description": "Get details of a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show details of a customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer identifier",
                        "name": "login_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server/api/v1/fruits": {
            "get": {
                "description": "Get details of all fruits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show details of all fruits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Fruit"
                            }
                        }
                    }
                }
            }
        },
        "/server/api/v1/fruits/{name}": {
            "get": {
                "description": "Get details of a fruit item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show details of a fruit item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fruit identifier",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Fruit"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server/api/v1/orangecoupon/{login_id}": {
            "get": {
                "description": "This endpoint applied orange 30 percent discount coupon code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Applied orange 30 coupon code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer identifier",
                        "name": "login_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Coupon"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server/api/v1/pay/{login_id}": {
            "post": {
                "description": "This end point will update payment details of cart into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Payment endpoint",
                "parameters": [
                    {
                        "description": "Payment input request",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Payment"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Customer identifier",
                        "name": "login_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Cart": {
            "type": "object",
            "properties": {
                "cartItem": {
                    "description": "CartItem is having has-many relation with Cart",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CartItem"
                    }
                },
                "coupon": {
                    "description": "Coupon is having has-many relation with Cart",
                    "type": "object",
                    "$ref": "#/definitions/models.Coupon"
                },
                "customerId": {
                    "description": "Foriegn key for the Cart table coming from the Customer table",
                    "type": "integer"
                },
                "id": {
                    "description": "Primary key for the Cart",
                    "type": "integer"
                },
                "payment": {
                    "description": "Payment is having has-one relation with Cart",
                    "type": "object",
                    "$ref": "#/definitions/models.Payment"
                },
                "total": {
                    "description": "Total amount valued for the cart",
                    "type": "number"
                }
            }
        },
        "models.CartItem": {
            "type": "object",
            "properties": {
                "cartID": {
                    "description": "Foriegn key for the CartItem table coming from the Cart table",
                    "type": "integer"
                },
                "costperitem": {
                    "description": "Cost per fruit",
                    "type": "number"
                },
                "count": {
                    "description": "Number of fruits ordered",
                    "type": "integer"
                },
                "id": {
                    "description": "Primary key for the Cart",
                    "type": "integer"
                },
                "itemtotal": {
                    "description": "Total cost for this fruits based on number of items",
                    "type": "number"
                },
                "name": {
                    "description": "Name of the Fruit",
                    "type": "string"
                }
            }
        },
        "models.Coupon": {
            "type": "object",
            "properties": {
                "cartid": {
                    "description": "Foriegn key for the Coupon table coming from the Cart table",
                    "type": "integer"
                },
                "id": {
                    "description": "Primary key for the Cart",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the coupon",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the coupon APPLIED and NOTAPPLIED are the two possible states",
                    "type": "string"
                }
            }
        },
        "models.CreateCustomerInput": {
            "type": "object",
            "required": [
                "firstname",
                "lastname",
                "loginid"
            ],
            "properties": {
                "firstname": {
                    "description": "First name of the customer",
                    "type": "string"
                },
                "lastname": {
                    "description": "Last name of the customer",
                    "type": "string"
                },
                "loginid": {
                    "description": "Login ID of the customer",
                    "type": "string"
                }
            }
        },
        "models.Customer": {
            "type": "object",
            "properties": {
                "cart": {
                    "description": "Cart assosiated to the customer",
                    "type": "object",
                    "$ref": "#/definitions/models.Cart"
                },
                "discounts": {
                    "description": "Discounts assosiated to the customer",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Discount"
                    }
                },
                "firstname": {
                    "description": "First name of the customer",
                    "type": "string"
                },
                "lastname": {
                    "description": "Last name of the customer",
                    "type": "string"
                },
                "loginid": {
                    "description": "Login ID of the customer",
                    "type": "string"
                }
            }
        },
        "models.Discount": {
            "type": "object",
            "properties": {
                "customerId": {
                    "description": "Foriegn key for the Discount table coming from the Customer table",
                    "type": "integer"
                },
                "id": {
                    "description": "Primary key for the Cart",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the coupon",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the coupon APPLIED and NOTAPPLIED are the two possible states",
                    "type": "string"
                }
            }
        },
        "models.Fruit": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Primary key for the Cart",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the fruit",
                    "type": "string"
                },
                "price": {
                    "description": "Price of each fruit",
                    "type": "number"
                }
            }
        },
        "models.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount needs to paid by the customer for the purchase",
                    "type": "number"
                },
                "cartId": {
                    "description": "Foriegn key for the Payment table coming from the Cart table",
                    "type": "integer"
                },
                "id": {
                    "description": "Primary key for the Cart",
                    "type": "integer"
                },
                "string": {
                    "description": "Status of the coupon PAID and NOTPAID are the two possible states",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
